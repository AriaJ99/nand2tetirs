// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack
/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field int maxLen,len;
    field Array str;
    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
        if(maxLength > 0){
			let str = Array.new(maxLength);
		}
		else
		{
			let str = Array.new(100);
		}
        let str=Array.new(maxLength);
        let maxLen=maxLength;
        let len=0;
        return this;
    }

    /** Disposes this string. */
    method void dispose() {
        do str.dispose();
        let str=null;
        return;
    }

    /** Returns the current length of this string. */
    method int length() {
        return len;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        return str[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        let str[j]=c;
        return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
        let str[len]=c;
        let len=len+1;
        return this;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
        let len=len-1;
        return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
        var int value,i;
        var boolean sign,cond;
        let cond=true;
        if(str[0]=45){
            let sign=false;
            let i=1;
        }
        else{
            let sign=true;
            let i=0;
        }
        let value=0;
        
        while(cond){
            if(str[i]<48){
                let cond=false;
            }
            if(str[i]>57){
                let cond=false;
            }
            if(i=maxLen){
                let cond=false;
            }
            if(cond){
                let value=value*10+str[i]-48;
            }
            let i=i+1;
        }
        if(~sign){
            let value=-value;
        }
        return value;

    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        var int reverse,index;
        var Array temp;
        let len=0;
        let index=0;
        let temp=Array.new(7);
        if(val<0){
            let str[len]=45;
            let val=-val;
            let len=len+1;
        }
        while(val>0){
            
            let temp[index]=(val-(val/10*10)+48);
            let val=val/10;
            let index=index+1;
        }
        let index=index-1;
        while(index>-1){
            let str[len]=temp[index];
            let index=index-1;
            let len=len+1;
        }
        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
